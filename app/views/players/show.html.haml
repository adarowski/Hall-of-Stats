- content_for :keywords do
  %meta{name: "keywords", content: @player.keywords}

- content_for :title, @player.name

- content_for(:header_styles) do
  %style{:type => 'text/css'}
    = render 'player_specific_styles', player: @player
    = render 'full_year_season_stat_styles', season_stats: @player.season_stat_totals_for_styling

= render 'shared/header'

= render 'shared/search'

%section#player-id
  %h2
    = @player.first_name
    %span= @player.last_name
  %dl
    - unless @player.position == "npos"
      %dt.position Position
      - if @player.position == "of" || "if"
        %dd.position= @player.position_name
      - else
        %dd.position= link_to @player.position_name, '/position/' + @player.position + "/#" + @player.id
    - if @player.years_played
      %dt.years Years
      %dd.years #{@player.years_played}
    %dt.hall-rating<> Hall Rating
    %dd.hall-rating
      - if @player.hall_rating > 99.49 && @player.hall_rating < 100 && @player.hos == false
        = @player.hall_rating.round(1)
      - else
        = @player.hall_rating.round
    - if @player.hof == true
      %dt.hall-of-fame
        = link_to "/#hof" do
          Hall of Fame
          %span (#{@player.hof_year} via #{@player.hof_via_name})
      %dd.hall-of-fame Inductee
    - if @player.hos == true
      %dt.hall-of-stats
        = link_to "Hall of Stats", "/#hos"
      %dd.hall-of-stats Inductee
    - if @player.hom == true
      %dt.hall-of-merit
        = link_to "Hall of Merit", "/#hom"
      %dd.hall-of-merit Inductee
    - if @player.eligibility == "active" && @player.hall_rating > 100
      %dt.active Active
      %dd.active
        #{@player.first_name} #{@player.last_name} is still active, but he is already a future Hall of Stats inductee.
    - if @player.eligibility == "upcoming" && @player.hall_rating > 20
      %dt.upcoming Not Yet Eligible
      %dd.upcoming
        #{@player.first_name} #{@player.last_name} is eligible for the
        = succeed "." do
          = link_to "BBWAA ballot in #{@player.last_year + 6}", "/upcoming#bbwaa_#{@player.last_year + 6}"
        - if @player.hall_rating > 100
          He is a future Hall of Stats inductee.
    - if @player.alt_hof?
      %dt.eligibility-note Induction Note
      %dd.eligibility-note
        #{@player.first_name} #{@player.last_name} is not in the Hall of Fame as a
        - if @player.alt_hof == 'nl'
          Major League
        player, but he is in the Hall of Fame as a #{@player.alt_hof_name}.
    - if @player.eligibility == "banned"
      - if @player.hall_rating > 100
        %dt.banned Banned
      - else
        %dt.eligibility-note Banned
      %dd.eligibility-note
        #{@player.first_name} #{@player.last_name} isn’t eligible for the Hall of Fame because he is banned from baseball.
        - if @player.hall_rating > 100
          If he was eligible, he would be in the Hall of Stats.
    - if @bbwaa_2018_returning
      %dt.eligibility-note Next Ballot
      %dd.eligibility-note
        #{@player.first_name} #{@player.last_name} is returning to the
        = succeed "." do
          = link_to "BBWAA ballot in 2017", "/upcoming#bbwaa_returning_2018"
    - elsif @player.era_committee
      %dt.eligibility-note Next Ballot
      %dd.eligibility-note
        - if @player.era_committee == 'modern_baseball'
          = render 'era_committee_link', player: @player, year: 2020
        - elsif @player.era_committee == 'todays_game'
          - if @player.last_year <= 2003
            = render 'era_committee_link', player: @player, year: 2019
          - elsif @player.last_year <= 2006
            = render 'era_committee_link', player: @player, year: 2022
          - elsif @player.last_year <= 2008
            = render 'era_committee_link', player: @player, year: 2024
          - else
            = render 'era_committee_link', player: @player, year: 2027
        - elsif @player.era_committee == 'golden_days'
          = render 'era_committee_link', player: @player, year: 2021
        - elsif @player.era_committee == 'early_baseball'
          = render 'era_committee_link', player: @player, year: 2021

  - if @player.has_photo?
    %figure.portrait
      = image_tag "thumbs/#{@player.id}.jpg", alt: "#{@player.name} Photo", width: '90', height: '135'

- if @player.peak_pct
  %section#value-breakdown
    %dl
      %dt.peak<> Peak
      %dd.peak
        #{@player.peak_pct.round}%
      %dt.longevity<> Longevity
      %dd.longevity
        #{@player.longevity_pct.round}%

- if @player.bio? || @player.articles.published.any?
  %section#bio
    - if @player.bio?
      = raw BioFormatter.new(@player.bio, @player.id)

    - if @player.articles.published.any?
      %h3
        Articles
        %small Mentioning #{@player.first_name} #{@player.last_name}
      %ul.article-list
        - @player.articles.published.by_published_at.each_with_index do |article, i|
          %li{:class => ("extra" if i > 2) }
            = link_to article_path(article) do
              = article.title
              %span
                •
                = article.published_at.stamp("Jan 1, 2012")
        - if @player.articles.published.by_published_at.count > 3
          %li
            %a#show-more-articles{href: '#'} Show all #{@player.articles.published.by_published_at.count} articles

%section#rankings
  %h3
    Rankings
    %small by Hall Rating
  %ul
    %li
      %strong= ordinalize_with_delimiter(@player.ranking_overall)
      All Time
      %em (#{overall_percentage(@player)}%)
    - if @player.hos == true
      %li
        %strong= ordinalize_with_delimiter(@player.ranking_hos)
        among Eligible Players
    - if @player.hof == true
      %li
        %strong= ordinalize_with_delimiter(@player.ranking_hof)
        among Hall of Famers
    - unless ["npos", "of", "if"].include?(@player.position)
      %li
        %strong= ordinalize_with_delimiter(@player.ranking_position)
        among #{@player.position_name.pluralize}
  
%section#franchise-contributions
  %h3
    Franchise Contributions
    %small by Hall Rating
  %ul
    - @player.franchise_rankings.sort_by{|k, v| v[:hall_rating]}.reverse.each do |franchise, rankings|
      %li{class: franchise}
        = link_to '/franchise/' + franchise + '#' + @player.id do
          %abbr.franchise-abbr{class: franchise + "-bg"}= franchise.upcase
        %strong= rankings[:hall_rating].round
        %em (#{ordinalize_with_delimiter(rankings[:ranking])})

%section#stats-summary

  %h3 Career Statistics

  %table#win-value
    %caption Win-Value Statistics
    %thead
      %tr
        %th
          %abbr{title: "Wins Above Replacement"} WAR
        %th
          %abbr{title: "Wins Above Average"} WAA
        %th
          %abbr{title: "Adjusted Wins Above Replacement"}
            %em> adj
            WAR
        %th
          %abbr{title: "Adjusted Wins Above Average"}
            %em> adj
            WAA
    %tfoot
      %tr
        %td{colspan: 4}
          %a#show-more-stats{href: '#'} About the stats
    %tbody
      %tr
        %td= @player.war_tot
        %td= @player.waa_tot
        %td= @player.war162_tot
        %td= @player.waa0_tot

  #more-stats{style: 'display: none;'}
    %p
      - if @player.eligibility == "active"
        So far in his career,
      - else
        Over the course of his career,
      #{@player.first_name} #{@player.last_name}
      = succeed '.' do
        - if @player.position == "p"
          - if @player.eligibility == "active"
            has
          pitched <strong>#{number_with_delimiter (@player.ip_outs)/3}</strong> innings
          - if @player.pa > 0
            and made <strong>#{number_with_delimiter @player.pa}</strong> plate appearances
        - else
          - if @player.eligibility == "active"
            has
          made <strong>#{number_with_delimiter @player.pa}</strong> plate appearances
          - if @player.ip_outs?
            and pitched <strong>#{number_with_delimiter (@player.ip_outs)/3}</strong> innings
      = succeed "." do
        #{@player.last_name}
        - if @player.eligibility == "active"
          has been worth
        - else
          was worth
        <strong>#{@player.war_tot}</strong> Wins Above Replacement
        - if @player.ip_outs? && @player.pa > 0
          - if @player.position == "p"
            (#{@player.war_p} as a pitcher and #{@player.war_pos} as a hitter)
          - else
            (#{@player.war_pos} as a hitter and #{@player.war_p} as a pitcher)
        and <strong>#{@player.waa_tot}</strong> Wins Above Average
        - if @player.ip_outs? && @player.pa > 0
          - if @player.position == "p"
            (#{@player.waa_p} as a pitcher and #{@player.waa_pos} as a hitter)
          - else
            (#{@player.waa_pos} as a hitter and #{@player.waa_p} as a pitcher)
    %p
      After adjusting for length of schedule, catchers, and relief pitchers, the #{@player.war_tot} WAR becomes
      <strong>#{@player.war162_tot}</strong> <em>adj</em>WAR. Then, WAA is adjusted by ignoring negative seasons
      (thus, truly capturing a player’s peak seasons) and making similar adjustments for catchers and relief pitchers.
      After these adjustments, the #{@player.waa_tot} WAA becomes <strong>#{@player.waa0_tot}</strong> <em>adj</em>WAA.

    %p
      Then, the <em>adj</em>WAR and <em>adj</em>WAA are combined, but with extra weighting given to <em>adj</em>WAA.
      This gives #{@player.last_name} <strong>#{@player.wwar}</strong> wWAR. wWAR is then converted to Hall Rating. 
      A Hall Rating of 100 represents the Hall of Stats borderline (similar to OPS+ or wRC+, where 100 represents league average).
    %p
      #{@player.first_name} #{@player.last_name} has a Hall Rating of
      = succeed "," do
        - if @player.hall_rating > 99.49 && @player.hall_rating < 100 && @player.hos == false
          %strong= @player.hall_rating.round(1)
        - else
          %strong= @player.hall_rating.round
      - if @player.eligibility == "upcoming"
        = succeed "." do
          - if @player.hall_rating > 180
            meaning he will not only be in the Hall of Stats when eligible—he will rate as one of the very best players of all time.
          - elsif @player.hall_rating > 110
            meaning he will be in the Hall of Stats when eligible
          - elsif @player.hall_rating > 100
            meaning he will be in the Hall of Stats when eligible—but very close to the borderline
          - elsif @player.hall_rating > 90
            meaning he will not be in the Hall of Stats when eligible—but he will be close
          - elsif @player.hall_rating > 80
            meaning he will fall significantly short of the Hall of Stats when eligible
          - elsif @player.hall_rating > 60
            meaning he will not be in the Hall of Stats when eligible
          - else
            leaving him nowhere close to induction to the Hall of Stats when eligible
      - elsif @player.eligibility == "active"
        = succeed "." do
          - if @player.hall_rating > 180
            meaning he would not only be in the Hall of Stats if his career ended today—he would rate as one of the very best players of all time.
          - elsif @player.hall_rating > 110
            meaning he would be in the Hall of Stats if his career ended today
          - elsif @player.hall_rating > 100
            meaning he would be in the Hall of Stats if his career ended today—but very close to the borderline
          - elsif @player.hall_rating > 90
            meaning he would not be in the Hall of Stats if his career ended today—but he would be close
          - else
            meaning he would not be in the Hall of Stats if his career ended today
      - else
        = succeed "." do
          - if @player.id == "ruthba01"
            making him not only a member of the Hall of Stats—but the very best player of all time
          - elsif @player.hall_rating > 180
            making him not only a member of the Hall of Stats—but one of the very best players of all time
          - elsif @player.hall_rating > 110
            making him a member of the Hall of Stats
          - elsif @player.hall_rating > 100
            making him a member of the Hall of Stats—but one who sits very close to the borderline
          - elsif @player.hall_rating > 90
            making him close to the Hall of Stats borderline—but still on the outside
          - elsif @player.hall_rating > 60
            leaving him short of induction to the Hall of Stats
          - else
            leaving him nowhere close to induction to the Hall of Stats

    %p
      Want even more detail about the formula? See the
      = succeed '.' do
        = link_to "About page", "/about"

  %table#run-value
    %caption Run-Value Statistics
    %thead
      %tr
        %th.bat
          %abbr{title: "WAR Batting Runs"} Bat
        %th.run
          %abbr{title: "WAR Baserunning Runs"} Run
        %th.dp
          %abbr{title: "WAR Double Play Runs"} DP
        %th.fld
          %abbr{title: "WAR Fielding Runs"} Fld
        %th.pos
          %abbr{title: "WAR Position Runs"} Pos
        - if @player.runs_pitch
          %th.pit
            %abbr{title: "WAR Pitching Runs"} Pit
    %tbody
      %tr
        %td= @player.runs_bat.round
        %td= @player.runs_br.round
        %td= @player.runs_dp.round
        %td= @player.runs_defense.round
        %td= @player.runs_totalpos.round
        - if @player.runs_pitch
          %td= @player.runs_pitch.round

  %table#seasonal-stats
    %caption Season-by-Season Statistics
    %thead
      %tr
        %th Year
        %th Team
        %th
          %abbr{title: "Wins Above Average"} WAA
        %th
          %abbr{title: "Wins Above Replacement"} WAR
    %tbody
      - @player.sorted_season_stats.sort_by{|k, v| k}.each do |year, season_stats|
        - if season_stats.count == 1
          - ss = season_stats.first
          %tr{ class: "yr-#{ss.year} full-season-stat"}
            %th= ss.year
            %td= ss.team_and_franchise
            %td= ss.waa_tot
            %td= ss.war_tot
        - else
          %tr{ class: "yr-#{year} full-season-stat", 'data-year' => year }
            %th= year
            %td
              %strong.faux-link= pluralize(season_stats.map(&:team).count, 'team')
            %td= "%0.1f" % season_stats.map(&:waa_tot).sum
            %td= "%0.1f" % season_stats.map(&:war_tot).sum
          
          - season_stats.each do |ss|
            %tr{ class: "yr-#{ss.year}-#{ss.stint} partial-season-stat" }
              %th= ss.year
              %td= ss.team_and_franchise
              %td= ss.waa_tot
              %td= ss.war_tot
      
- if SimilarityScore.for_player(@player).any?
  %section#similar-players
    %table
      %caption
        Similar in Value
        %small to #{@player.first_name} #{@player.last_name}
      %thead
        %tr
          %th
            Player
            %span (Hall Rating)
          %th Similarity
      %tbody
        - SimilarityScore.for_player(@player).limit(20).each do |score|
          - player = score.players.find{|p| p.id != @player.id}
          %tr
            %th
              %a{href: player_path(player)}= player.name
              %span (#{player.hall_rating.round})
            %td= score.score.round

